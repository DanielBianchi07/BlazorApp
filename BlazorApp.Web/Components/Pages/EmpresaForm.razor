@page "/empresas/cadastrar"
@rendermode InteractiveServer
@inject EmpresaService empresaService
@inject TelefoneEmpresaService telefoneEmpresaService
@inject EstadoService estadoService
@inject CidadeService cidadeService
@inject EnderecoEmpresaService enderecoEmpresaService

<title>Empresas</title>

<!-- Formulário de criação de empresa -->
<form @onsubmit="CriarEmpresa">
    <div class="col-9 form-group mb-2">
        <label for="razaoSocial">Razão Social:</label>
        <input type="text" class="form-control" id="razaoSocial" @bind="empresa.RazaoSocial">
    </div>
    <div class="col-9 form-group mb-2">
        <label for="cnpj">CNPJ:</label>
        <input type="text" class="form-control" id="cnpj" @bind="empresa.CNPJ">
    </div>
    <div class="col-9 form-group mb-2">
        <label for="email">Email:</label>
        <input type="text" class="form-control" id="email" @bind="empresa.Email">
    </div>
<!-- ------------------------------- -->

    <div class="row mb-2">
        <div class="col-8 form-group">
            <label for="telefone">Telefone</label>
            <input type="text" class="form-control" id="telefone" @bind="nroTelefone">
        </div>
        <div class="col-4 form-group align-content-end">
            <button type="button" class="btn btn-success" @onclick="AddNewTelefone"><i class="bi bi-plus-square"></i></button>
        </div>
    </div>

    @foreach(var item in telefonesEmpresas)
    {
        <div class="row mb-2">
            <div class="col-8 form-group mt-2">
                <input type="text" class="form-control" id="telefone" @bind="item.NroTelefone">
            </div>
            <div class="col-4 form-group align-content-end">
                <button type="button" class="btn btn-danger" @onclick="() => RemoveTelefone(item)"><i class="bi bi-trash"></i></button>
            </div>
        </div>
    }
    <div class="col-9 form-group mb-2">
        <label for="NomeRua">Nome Rua:</label>
        <input type="text" class="form-control" id="NomeRua" @bind="enderecoEmpresa.NomeRua">
    </div>
    <div class="col-9 form-group mb-2">
        <label for="Numero">Numero:</label>
        <input type="text" class="form-control" id="Numero" @bind="enderecoEmpresa.Numero">
    </div>
    <div class="col-9 form-group mb-2">
        <label for="Bairro">Bairro:</label>
        <input type="text" class="form-control" id="Bairro" @bind="enderecoEmpresa.Bairro">
    </div>
    <div class="col-9 form-group mb-2">
        <label for="Complemento">Complemento:</label>
        <input type="text" class="form-control" id="Complemento" @bind="enderecoEmpresa.Complemento">
    </div>
    <div class="col-9 form-group mb-2">
        <label for="CEP">CEP:</label>
        <input type="text" class="form-control" id="CEP" @bind="enderecoEmpresa.CEP">
    </div>
    <div class="col-9 form-group mb-2">
        <label for="Cidade">Cidade:</label>
        <input type="text" class="form-control mb-1" id="Cidade" @bind-value="cidadeGet">
        <select @bind="idCidade" class="form-select" aria-label="Default select example">
            <option selected></option>
            @if(cidades != null)
            {
                @foreach(var cidade in cidades)
                {
                    if(!string.IsNullOrWhiteSpace(cidadeGet))
                    {
                        if(cidade.Nome.StartsWith(cidadeGet))
                        {
                            <option value="@cidade.Id" selected>@cidade.Nome</option>
                        }
                    }
                    else{
                        <option value="@cidade.Id">@cidade.Nome</option>
                    }
                }
            }
        </select>
    </div>
    <div class="col-9 form-group mb-2">
        <label for="Complemento">Estado:</label>
        <select @bind="idEstado" class="form-select" aria-label="Default select example">
            <option selected></option>
            @if(estados != null)
            {
                @foreach(var estado in estados)
                {
                    <option value="@estado.Id">@estado.Nome - @estado.UF</option>
                }
            }
        </select>
    </div>

<!-- ------------------------------- -->    
    <div class="form-check mt-3">
        <input class="form-check-input" type="checkbox" value="" id="flexCheckChecked" @onchange="EstadoEmpresa" checked>
        <label class="form-check-label" for="flexCheckChecked">
            Ativa
        </label>
    </div>

    <!-- Adicione mais campos conforme necessário (e-mail, telefones, etc.) -->
    <button type="submit" class="btn btn-primary m-3 mt-4">Criar Empresa</button>
</form>

@code {
    private string nroTelefone = "";
    private Empresa empresa = new Empresa(){
        Status = 1
    };
    private List<TelefoneEmpresa> telefonesEmpresas = new List<TelefoneEmpresa>();
    public Guid idEstado;
    public Guid idCidade;
    public string cidadeGet { get; set; }
    private EnderecoEmpresa enderecoEmpresa = new EnderecoEmpresa();
    private List<Cidade> cidades;
    private List<Estado> estados;

    protected override async Task OnInitializedAsync()
    {
        estados = await estadoService.GetEstadosAsync();
        cidades = await cidadeService.GetCidadesAsync();
    }
    private async Task CriarEmpresa()
    {
        Empresa empresaModel = await empresaService.CriarEmpresaAsync(empresa);
        foreach (TelefoneEmpresa telEmpresa in telefonesEmpresas)
        {
            await telefoneEmpresaService.CriarTelefoneEmpresaAsync(telEmpresa, empresaModel.Id);
        }
        enderecoEmpresa.CidadeId = idCidade;
        enderecoEmpresa.EmpresaId = empresaModel.Id;
        await enderecoEmpresaService.CriarEnderecoEmpresaAsync(enderecoEmpresa);
        // Limpa os campos do formulário
        empresa = new Empresa();
        enderecoEmpresa = new EnderecoEmpresa();
        telefonesEmpresas.Clear();
    }
///==========================================================
    void AddNewTelefone()
    {
        if(!string.IsNullOrWhiteSpace(nroTelefone)){
            telefonesEmpresas.Add(new TelefoneEmpresa {NroTelefone = nroTelefone});
            nroTelefone = "";
        }
    }

    void RemoveTelefone(TelefoneEmpresa telfone)
    {
        telefonesEmpresas.Remove(telfone);
    }
///===============================================================
    public void EstadoEmpresa() 
    {
        if (empresa.Status == 0)
            empresa.Status = 1;
        else
            empresa.Status = 0;
    }
    
}